@{
    ViewBag.Title = "About";
}
<h2>@ViewBag.Title.</h2>

<p>Software engineering lies at the root of object-oriented design (OOD) and is studied by many students who unfortunately, face difficulties from the start.</p>
<p>The biggest problem of novice programmers is not with understanding the basic concepts but rather learning to apply them and even though the theory side is very important in learning programming, students also need practical experience to understand concepts (Lahtinen et al., 2005). As a result, teachers should focus more on a combination of both.</p>
<p>The three challenges faced by students discussed by Holland & Lieberherr stem from students thinking procedurally rather than object based (Ragonis & Ben-Ari, 2005; Wei et al., 2005) and difficulties that the students may encounter “cannot be fully solved by teachers in a traditional academic setting” (Wei et al., 2005).</p>
<p>Also, “while teachers know more deeply the concepts being taught, they are able to see when students themselves do not have a full understanding even though they think they understand completely” (Milne & Rowe, 2002). As discussed by Ragonis & Ben-Ari, this leads to students and teachers viewing the need for alternative learning situations and materials differently and therefore this can be seen as a possible source for problems in students’ motivation.</p>
<p>OOD also includes less well-known areas such as the General Responsibility Assignment Pattern (GRASP). GRASP fits in because it is a pattern of guidelines for assigning responsibility to classes and objects. However, if students have difficulties with the basics, more advanced concepts will be difficult as well.</p>
<p>To overcome student issues, in particular motivation, gamification could be used as “games are the most potentially attractive pastime in the history of humankind” (Prensky, 2007). Prensky gives twelve reasons for this but importantly, games give enjoyment, pleasure and involvement.</p>
<p>As identified and also confirmed by (Prensky, 2002) “one problem in learning is student motivation”.  To learn any subject, “the student needs to put effort in but there needs to be a reason for them to want to learn”. Teachers can teach theory, but it may not keep the student involved. Computer games, however, “generally keep the users involved and consequently encourage more time playing” (Kohwalter et al., 2011).</p>
<p>As well as making education available to more people, Pedagogy must address “the disconnect” between “how students learn and how teachers teach” by recognizing that today’s students, “process information fundamentally different from their predecessors and these differences go far further and deeper than most educators suspect or realize” (Clarke & Clarke, 2009).</p>
<p>As the world we now live in becomes more “digital” and  “online”, Pedagogy could be improved by making use of the digital world that students are growing up in.</p>
<p>Therefore, the inclusion of gamification into online forums such as MOOCs with their reward systems, social implications and making courses available to a broader audience could help overcome the issue of current teaching methods.</p>
<p>However, such games currently do not exist and there has been no research into whether they would be effective.</p>
<hr/>
<p>Clarke, T. and Clarke, E. (2009) ‘Born digital? Pedagogy and computer‐assisted learning’, <i>Education + Training</i>, 51(5/6), pp. 395–407.</p>
<p>Kohwalter, T. C., Clua, E. W. G. and Murta, L. G. P. (2011) ‘SDM - An Educational Game for Software Engineering’, In 2011 <i>Brazilian Symposium on Games and Digital Entertainment (SBGAMES)</i>, pp. 222–231.</p>
<p>Milne, I. and Rowe, G. (2002) ‘Difficulties in Learning and Teaching Programming—Views of Students and Tutors’, <i>Education and Information Technologies</i>, 7(1), pp. 55–66.</p>
<p>Prensky, M. (2007) ‘Fun, Play and Games:What Makes Games Engaging’, <i>In Digital Game-Based Learning</i>, Paragon House.</p>
<p>Prensky, M. (2002) ‘The motivation of gameplay’, <i>On the Horizon</i>, 10(1), pp. 5–11.</p>
<p>Ragonis, N. and Ben-Ari, M. (2005) ‘On Understanding the Statics and Dynamics of Object-oriented Programs’, In <i>Proceedings of the 36th SIGCSE Technical Symposium on Computer Science Education</i>, SIGCSE ’05, New York, NY, USA, ACM, pp. 226–230, [online] Available from: http://doi.acm.org/10.1145/1047344.1047425 (Accessed 20 January 2015).</p>
<p>Wei, F., Moritz, S. H., Parvez, S. M. and Blank, G. D. (2005) ‘A Student Model for Object-oriented Design and Programming’, <i>J. Comput. Sci. Coll.</i>, 20(5), pp. 260–273.</p>
